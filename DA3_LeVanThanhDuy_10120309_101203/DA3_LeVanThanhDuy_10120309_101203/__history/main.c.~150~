#include <16f877a.h>
#device ADC=10
#FUSES NOWDT                    //No Watch Dog Timer
#FUSES NOBROWNOUT               //No brownout reset
#FUSES NOLVP  //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O
#use delay(crystal=20000000)
#byte portd = 8
#byte portc = 0x07
// khiai báo chân lcd 
#define LCD_ENABLE_PIN  PIN_D3
#define LCD_RS_PIN PIN_D1
#define LCD_RW_PIN PIN_D2
#define LCD_DATA4 PIN_D4
#define LCD_DATA5 PIN_D5
#define LCD_DATA6 PIN_D6
#define LCD_DATA7 PIN_D7
#include <lcd.c>

#define cambien input(pin_c0)
#bit motor = portc.7

float vl_real;
float do_am;
   
long map(float x, float in_min, float in_max, float out_min, float out_max) {
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}

void set_adc_(){
   setup_adc(ADC_CLOCK_INTERNAL);
   setup_adc_ports(ALL_ANALOG);
   set_adc_channel(0);//Doc gia tri adc o chan A0
}

void main(){
    //khoi tao lcd 
   lcd_init();
   set_tris_c(0x0F);
   //doc adc
   set_adc_();
   
   lcd_gotoxy(1,1);
   printf(lcd_putc,"Do Am:");
   lcd_gotoxy(13,1);
   printf(lcd_putc,"%%");
   delay_ms(500);
   
   while(TRUE){
      delay_us(10);
      vl_real = read_adc();
  
      lcd_gotoxy(8,1);
      do_am = map(vl_real,0,1023,0,100); // gia tri adc doc duoc
      printf(lcd_putc,"%0.1f",do_am);
      
      
      if(do_am < 60){
         lcd_gotoxy(1,2);
         printf(lcd_putc,"BAT MAY");
         motor = 1;
      }
      else if(do_am > 70){
         motor = 0; 
         lcd_gotoxy(1,2);
         printf(lcd_putc,"TAT MAY");
      }
   }
}
